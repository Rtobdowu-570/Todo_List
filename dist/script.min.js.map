{"version":3,"sources":["script.js"],"names":["Item","text","_classCallCheck","this","id","Date","now","completed","Store","getItems","item","UI","addItemToList","list","document","querySelector","li","createElement","className","setAttribute","classList","add","checkBox","type","items","span","textContent","appendChild","button","createTextNode","checked","liElement","toggle","isCompleted","disabled","remove","el","parentElement","div","message","main","insertBefore","form","setTimeout","searchValue","querySelectorAll","forEach","toLowerCase","display","value","localStorage","getItem","itemText","JSON","parse","push","filteredItems","filter","setItem","stringify","find","displayItems","addEventListener","e","preventDefault","showAlert","clearFields","target","contains","itemId","Number","getAttribute","updateItem","toggleItem","closest","searchItems"],"mappings":"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","file":"script.min.js","sourcesContent":["class Item {\n  constructor(text) {\n    this.text = text;\n    this.id = Date.now(); // unique ID\n    this.completed = false;\n  }\n}\n\nclass UI {\n   static displayItems() {\n    const items = Store.getItems();\n    items.forEach((item) => UI.addItemToList(item));\n  }\n\n  static addItemToList(item) {\n    const list = document.querySelector('#list-group');\n    const li = document.createElement('li');\n    li.className = 'list-group-item';\n    li.setAttribute('data-id', item.id);\n\n    // Check if item is completed\n    if (item.completed) {\n      li.classList.add('completed');\n    }\n    const checkBox = document.createElement('input');\n    checkBox.type = 'checkbox';\n    checkBox.className = 'form_checkbox';\n    checkBox.checked = item.completed;\n    li.appendChild(checkBox);\n\n\n    const span = document.createElement('span');\n    span.textContent = item.text;\n    li.appendChild(span);\n\n    const button = document.createElement('button');\n    button.className = 'btn btn-danger';\n    button.appendChild(document.createTextNode('X'));\n\n  // Disable delete button if item is completed\n  if(item.completed) {\n    button.disabled = true;\n    button.classList.add('unclickable');\n  }\n\n    li.appendChild(button);\n    list.appendChild(li);\n  }\n\n\n  static toggleItem(liElement) {\n    const checkBox = liElement.querySelector('.form_checkbox');\n    const button = liElement.querySelector('btn-danger');\n    const isCompleted = checkBox.checked;\n\n    // Update UI\n    liElement.classList.toggle('completed', isCompleted);\n    \n\n    if (isCompleted) {\n      button.disabled = true;\n      button.classList.add('unclickable');\n    } else {\n      button.disabled = false;\n      button.classList.remove('unclickable');\n    }\n  }\n\n\n  static deleteItem(el) {\n      el.parentElement.remove();\n  }\n\n  static showAlert(message, className) {\n    const div = document.createElement('div');\n    div.className = `alert ${className}`;\n    div.textContent = message;\n    const main = document.querySelector('#main');\n    const form = document.querySelector('#form-control');\n    main.insertBefore(div, form);\n\n    // Vanish in 2 seconds\n    setTimeout(() => div.remove(), 2000);\n  }\n\n  static searchItems(searchValue) {\n    const items = document.querySelectorAll('.list-group-item');\n    items.forEach((item) => {\n       const itemText = item.querySelector('span').textContent.toLowerCase();\n       if(itemText.includes(searchValue.toLowerCase())) {\n        item.style.display = 'flex';\n       } else {\n        item.style.display = 'none';\n       }\n    })\n  }\n\n  static clearFields() {\n    document.querySelector('#input').value = '';\n  }\n}\n\nclass Store {\n\n   static getItems() {\n    let items;\n    if (localStorage.getItem('items') === null) {\n      items = [];\n      } else {\n      items = JSON.parse(localStorage.getItem('items'));\n    }\n    return items;\n   }\n\n   static addItems(item) {\n    const items = Store.getItems();\n    items.push(item);\n    localStorage.setItem('items', JSON.stringify(items));\n   }\n\n   static removeItem(id) {\n    const items = Store.getItems();\n    const filteredItems = items.filter(item => item.id !== id);\n    localStorage.setItem('items', JSON.stringify(filteredItems));\n }\n\n static updateItem(id) {\n  const items = Store.getItems();\n  const item = items.find(item => item.id === id);\n  if (item) {\n    item.completed = !item.completed;\n    localStorage.setItem('items', JSON.stringify(items));\n  }\n  return item ? item.completed : false;\n }\n}\n\n// Event Listeners \n\ndocument.addEventListener('DOMContentLoaded', UI.displayItems);\n\ndocument.querySelector('#form-control').addEventListener('submit', (e) => {\n  e.preventDefault();\n  const itemText = document.querySelector('#input').value;\n  if (itemText === '') {\n    UI.showAlert('Please add an item', 'error');\n  } else {\n    const item = new Item(itemText);\n    UI.addItemToList(item);\n    Store.addItems(item);\n    UI.showAlert('Item Added', 'success');\n    UI.clearFields();\n  }\n  });\n\n  // Toggle item\ndocument.querySelector('#list-group').addEventListener('click', (e) => {\n  if ( e.target.classList.contains('form_checkbox')) {\n  const li = e.target.closest('.list-group-item');\n  const itemId = Number(li.getAttribute('data-id'));\n  \n  // Update storage  \n  Store.updateItem(itemId);\n\n  // Update UI\n  UI.toggleItem(li);\n  UI.showAlert('Item Completed', 'success');\n  \n  } else {\n    return;\n  }\n});\n\n  // Delete an item\ndocument.querySelector('#list-group').addEventListener('click', (e) => {\n  if ( e.target.classList.contains('btn-danger')) {\n\n    // if button is not disabled \n    if (!e.target.disabled) {\n      const li = e.target.closest('.list-group-item');\n      const itemId = Number(li.getAttribute('data-id'));\n      \n      UI.deleteItem(li);\n      Store.removeItem(itemId);\n      UI.showAlert('Item Deleted', 'success');\n    }\n  }\n});\n\n\n\n// Search items\ndocument.querySelector('#search').addEventListener('keyup', (e) => {\n  const searchValue = e.target.value;\n  UI.searchItems(searchValue);\n});"]}